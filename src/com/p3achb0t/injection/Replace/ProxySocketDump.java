package com.p3achb0t.injection.Replace;

import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.Attribute;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.ConstantDynamic;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.Type;
import org.objectweb.asm.TypePath;

public class ProxySocketDump implements Opcodes {

    public static byte[] dump() throws Exception {

        ClassWriter classWriter = new ClassWriter(0);
        FieldVisitor fieldVisitor;
        MethodVisitor methodVisitor;
        AnnotationVisitor annotationVisitor0;

        classWriter.visit(V11, ACC_SUPER, "com/p3achb0t/injection/Replace/ProxySocket", null, "java/net/Socket", null);

        classWriter.visitInnerClass("java/lang/invoke/MethodHandles$Lookup", "java/lang/invoke/MethodHandles", "Lookup", ACC_PUBLIC | ACC_FINAL | ACC_STATIC);

        {
            fieldVisitor = classWriter.visitField(ACC_PRIVATE, "connection", "Lcom/p3achb0t/injection/Replace/ProxyConnection;", null, null);
            fieldVisitor.visitEnd();
        }
        {
            fieldVisitor = classWriter.visitField(ACC_PRIVATE, "proxyInetAddress", "Ljava/net/InetAddress;", null, null);
            fieldVisitor.visitEnd();
        }
        {
            fieldVisitor = classWriter.visitField(ACC_PRIVATE, "defaultAddress", "Ljava/net/InetAddress;", null, null);
            fieldVisitor.visitEnd();
        }
        {
            fieldVisitor = classWriter.visitField(ACC_PRIVATE, "defaultPort", "I", null, null);
            fieldVisitor.visitEnd();
        }
        {
            fieldVisitor = classWriter.visitField(ACC_PRIVATE, "proxyAddress", "Ljava/net/InetSocketAddress;", null, null);
            fieldVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "<init>", "(Ljava/net/InetAddress;I)V", null, new String[]{"java/io/IOException"});
            methodVisitor.visitCode();
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ILOAD, 2);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/net/Socket", "<init>", "(Ljava/net/InetAddress;I)V", false);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETSTATIC, "client", "proxy", "Lcom/p3achb0t/injection/Replace/ProxyConnection;");
            methodVisitor.visitFieldInsn(PUTFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "connection", "Lcom/p3achb0t/injection/Replace/ProxyConnection;");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "connection", "Lcom/p3achb0t/injection/Replace/ProxyConnection;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/p3achb0t/injection/Replace/ProxyConnection", "getIp", "()Ljava/lang/String;", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/net/InetAddress", "getByName", "(Ljava/lang/String;)Ljava/net/InetAddress;", false);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "proxyInetAddress", "Ljava/net/InetAddress;");
            methodVisitor.visitInsn(RETURN);
            methodVisitor.visitMaxs(3, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "connect", "(Ljava/net/SocketAddress;)V", null, new String[]{"java/io/IOException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/Exception");
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitTypeInsn(INSTANCEOF, "java/net/InetSocketAddress");
            Label label3 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label3);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/net/InetSocketAddress");
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/InetSocketAddress", "getHostString", "()Ljava/lang/String;", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/net/InetAddress", "getByName", "(Ljava/lang/String;)Ljava/net/InetAddress;", false);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "defaultAddress", "Ljava/net/InetAddress;");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/InetSocketAddress", "getPort", "()I", false);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "defaultPort", "I");
            methodVisitor.visitLabel(label3);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "connection", "Lcom/p3achb0t/injection/Replace/ProxyConnection;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/p3achb0t/injection/Replace/ProxyConnection", "getType", "()Ljava/lang/String;", false);
            methodVisitor.visitLdcInsn("");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
            Label label4 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label4);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitTypeInsn(NEW, "java/net/InetSocketAddress");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "connection", "Lcom/p3achb0t/injection/Replace/ProxyConnection;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/p3achb0t/injection/Replace/ProxyConnection", "getIp", "()Ljava/lang/String;", false);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "connection", "Lcom/p3achb0t/injection/Replace/ProxyConnection;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/p3achb0t/injection/Replace/ProxyConnection", "getPort", "()I", false);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/net/InetSocketAddress", "<init>", "(Ljava/lang/String;I)V", false);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "proxyAddress", "Ljava/net/InetSocketAddress;");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "proxyAddress", "Ljava/net/InetSocketAddress;");
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/net/Socket", "connect", "(Ljava/net/SocketAddress;)V", false);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/p3achb0t/injection/Replace/ProxySocket", "initProxy", "()V", false);
            methodVisitor.visitLabel(label1);
            Label label5 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label5);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Exception"});
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitJumpInsn(GOTO, label5);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/net/Socket", "connect", "(Ljava/net/SocketAddress;)V", false);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            methodVisitor.visitMaxs(5, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "initProxy", "()V", null, new String[]{"java/io/IOException"});
            methodVisitor.visitCode();
            methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "defaultAddress", "Ljava/net/InetAddress;");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "defaultPort", "I");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "proxyInetAddress", "Ljava/net/InetAddress;");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "connection", "Lcom/p3achb0t/injection/Replace/ProxyConnection;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/p3achb0t/injection/Replace/ProxyConnection", "getPort", "()I", false);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "connection", "Lcom/p3achb0t/injection/Replace/ProxyConnection;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/p3achb0t/injection/Replace/ProxyConnection", "getType", "()Ljava/lang/String;", false);
            methodVisitor.visitInvokeDynamicInsn("makeConcatWithConstants", "(Ljava/net/InetAddress;ILjava/net/InetAddress;ILjava/lang/String;)Ljava/lang/String;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/StringConcatFactory", "makeConcatWithConstants", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;", false), new Object[]{"Proxying:\u0001:\u0001 Over:\u0001:\u0001 Type:\u0001"});
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "connection", "Lcom/p3achb0t/injection/Replace/ProxyConnection;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/p3achb0t/injection/Replace/ProxyConnection", "getType", "()Ljava/lang/String;", false);
            methodVisitor.visitVarInsn(ASTORE, 1);
            methodVisitor.visitInsn(ICONST_M1);
            methodVisitor.visitVarInsn(ISTORE, 2);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "hashCode", "()I", false);
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            Label label3 = new Label();
            methodVisitor.visitLookupSwitchInsn(label3, new int[]{-1843718907, -1843718906, 2228360}, new Label[]{label0, label1, label2});
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"java/lang/String", Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitLdcInsn("HTTP");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
            methodVisitor.visitJumpInsn(IFEQ, label3);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 2);
            methodVisitor.visitJumpInsn(GOTO, label3);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitLdcInsn("SOCKS4");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
            methodVisitor.visitJumpInsn(IFEQ, label3);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitVarInsn(ISTORE, 2);
            methodVisitor.visitJumpInsn(GOTO, label3);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitLdcInsn("SOCKS5");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
            methodVisitor.visitJumpInsn(IFEQ, label3);
            methodVisitor.visitInsn(ICONST_2);
            methodVisitor.visitVarInsn(ISTORE, 2);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 2);
            Label label4 = new Label();
            Label label5 = new Label();
            Label label6 = new Label();
            Label label7 = new Label();
            methodVisitor.visitTableSwitchInsn(0, 2, label7, new Label[]{label4, label5, label6});
            methodVisitor.visitLabel(label4);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            Label label8 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label8);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitJumpInsn(GOTO, label8);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/p3achb0t/injection/Replace/ProxySocket", "socks5_connect", "()V", false);
            methodVisitor.visitJumpInsn(GOTO, label8);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitTypeInsn(NEW, "java/io/IOException");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitLdcInsn("Unsupported proxy type:");
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/IOException", "<init>", "(Ljava/lang/String;)V", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            methodVisitor.visitMaxs(6, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "socks5_connect", "()V", null, new String[]{"java/io/IOException"});
            methodVisitor.visitCode();
            methodVisitor.visitTypeInsn(NEW, "java/io/DataOutputStream");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/p3achb0t/injection/Replace/ProxySocket", "getOutputStream", "()Ljava/io/OutputStream;", false);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/DataOutputStream", "<init>", "(Ljava/io/OutputStream;)V", false);
            methodVisitor.visitVarInsn(ASTORE, 1);
            methodVisitor.visitTypeInsn(NEW, "java/io/DataInputStream");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/p3achb0t/injection/Replace/ProxySocket", "getInputStream", "()Ljava/io/InputStream;", false);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/DataInputStream", "<init>", "(Ljava/io/InputStream;)V", false);
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(ICONST_5);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "write", "(I)V", false);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "connection", "Lcom/p3achb0t/injection/Replace/ProxyConnection;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/p3achb0t/injection/Replace/ProxyConnection", "getUsername", "()Ljava/lang/String;", false);
            methodVisitor.visitLdcInsn("");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
            Label label0 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label0);
            methodVisitor.visitInsn(ICONST_1);
            Label label1 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label1);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"java/io/DataOutputStream", "java/io/DataInputStream"}, 0, null);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            methodVisitor.visitVarInsn(ISTORE, 3);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ILOAD, 3);
            Label label2 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label2);
            methodVisitor.visitInsn(ICONST_2);
            Label label3 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label3);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 4, new Object[]{"com/p3achb0t/injection/Replace/ProxySocket", "java/io/DataOutputStream", "java/io/DataInputStream", Opcodes.INTEGER}, 1, new Object[]{"java/io/DataOutputStream"});
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitFrame(Opcodes.F_FULL, 4, new Object[]{"com/p3achb0t/injection/Replace/ProxySocket", "java/io/DataOutputStream", "java/io/DataInputStream", Opcodes.INTEGER}, 2, new Object[]{"java/io/DataOutputStream", Opcodes.INTEGER});
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "write", "(I)V", false);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "write", "(I)V", false);
            methodVisitor.visitVarInsn(ILOAD, 3);
            Label label4 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label4);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(ICONST_2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "write", "(I)V", false);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "flush", "()V", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataInputStream", "read", "()I", false);
            methodVisitor.visitInsn(ICONST_5);
            Label label5 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPEQ, label5);
            methodVisitor.visitTypeInsn(NEW, "java/io/IOException");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitLdcInsn("Proxy server is not supported!");
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/IOException", "<init>", "(Ljava/lang/String;)V", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataInputStream", "read", "()I", false);
            Label label6 = new Label();
            Label label7 = new Label();
            Label label8 = new Label();
            methodVisitor.visitLookupSwitchInsn(label8, new int[]{0, 2}, new Label[]{label6, label7});
            methodVisitor.visitLabel(label6);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            Label label9 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label9);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "write", "(I)V", false);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "connection", "Lcom/p3achb0t/injection/Replace/ProxyConnection;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/p3achb0t/injection/Replace/ProxyConnection", "getUsername", "()Ljava/lang/String;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "write", "(I)V", false);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "connection", "Lcom/p3achb0t/injection/Replace/ProxyConnection;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/p3achb0t/injection/Replace/ProxyConnection", "getUsername", "()Ljava/lang/String;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "getBytes", "()[B", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "write", "([B)V", false);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "connection", "Lcom/p3achb0t/injection/Replace/ProxyConnection;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/p3achb0t/injection/Replace/ProxyConnection", "getPassword", "()Ljava/lang/String;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "write", "(I)V", false);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "connection", "Lcom/p3achb0t/injection/Replace/ProxyConnection;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/p3achb0t/injection/Replace/ProxyConnection", "getPassword", "()Ljava/lang/String;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "getBytes", "()[B", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "write", "([B)V", false);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "flush", "()V", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataInputStream", "read", "()I", false);
            methodVisitor.visitInsn(POP);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataInputStream", "read", "()I", false);
            methodVisitor.visitJumpInsn(IFNE, label8);
            methodVisitor.visitJumpInsn(GOTO, label9);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitTypeInsn(NEW, "java/io/IOException");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitLdcInsn("Proxy server declined request!");
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/IOException", "<init>", "(Ljava/lang/String;)V", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(ICONST_5);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "write", "(I)V", false);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "write", "(I)V", false);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "write", "(I)V", false);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "defaultAddress", "Ljava/net/InetAddress;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/InetAddress", "getAddress", "()[B", false);
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ARRAYLENGTH);
            methodVisitor.visitInsn(ICONST_4);
            Label label10 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPNE, label10);
            methodVisitor.visitInsn(ICONST_1);
            Label label11 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label11);
            methodVisitor.visitLabel(label10);
            methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[]{"com/p3achb0t/injection/Replace/ProxySocket", "java/io/DataOutputStream", "java/io/DataInputStream", Opcodes.INTEGER, "[B"}, 1, new Object[]{"java/io/DataOutputStream"});
            methodVisitor.visitInsn(ICONST_4);
            methodVisitor.visitLabel(label11);
            methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[]{"com/p3achb0t/injection/Replace/ProxySocket", "java/io/DataOutputStream", "java/io/DataInputStream", Opcodes.INTEGER, "[B"}, 2, new Object[]{"java/io/DataOutputStream", Opcodes.INTEGER});
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "write", "(I)V", false);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "write", "([B)V", false);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "defaultPort", "I");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "writeShort", "(I)V", false);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataOutputStream", "flush", "()V", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataInputStream", "read", "()I", false);
            methodVisitor.visitInsn(ICONST_5);
            Label label12 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPEQ, label12);
            methodVisitor.visitTypeInsn(NEW, "java/io/IOException");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitLdcInsn("Proxy server dun goofed");
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/IOException", "<init>", "(Ljava/lang/String;)V", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label12);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataInputStream", "read", "()I", false);
            methodVisitor.visitVarInsn(ISTORE, 5);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitIntInsn(BIPUSH, 8);
            Label label13 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPNE, label13);
            methodVisitor.visitTypeInsn(NEW, "java/io/IOException");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitLdcInsn("Bad address sent to proxy server");
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/IOException", "<init>", "(Ljava/lang/String;)V", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label13);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 5);
            Label label14 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label14);
            methodVisitor.visitTypeInsn(NEW, "java/io/IOException");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitLdcInsn("Unable to connect to server!");
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/IOException", "<init>", "(Ljava/lang/String;)V", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label14);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataInputStream", "read", "()I", false);
            methodVisitor.visitInsn(POP);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataInputStream", "read", "()I", false);
            methodVisitor.visitVarInsn(ISTORE, 6);
            methodVisitor.visitInsn(ICONST_4);
            methodVisitor.visitIntInsn(NEWARRAY, T_BYTE);
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitVarInsn(ILOAD, 6);
            Label label15 = new Label();
            Label label16 = new Label();
            Label label17 = new Label();
            methodVisitor.visitLookupSwitchInsn(label17, new int[]{1, 4}, new Label[]{label15, label16});
            methodVisitor.visitLabel(label15);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            methodVisitor.visitInsn(ICONST_4);
            methodVisitor.visitIntInsn(NEWARRAY, T_BYTE);
            methodVisitor.visitVarInsn(ASTORE, 4);
            Label label18 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label18);
            methodVisitor.visitLabel(label16);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitIntInsn(BIPUSH, 16);
            methodVisitor.visitIntInsn(NEWARRAY, T_BYTE);
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitJumpInsn(GOTO, label18);
            methodVisitor.visitLabel(label17);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitTypeInsn(NEW, "java/io/IOException");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitLdcInsn("Bad address type from proxy server!");
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/IOException", "<init>", "(Ljava/lang/String;)V", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label18);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataInputStream", "readFully", "([B)V", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/DataInputStream", "readShort", "()S", false);
            methodVisitor.visitInsn(POP);
            methodVisitor.visitInsn(RETURN);
            methodVisitor.visitMaxs(3, 7);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getPort", "()I", null, null);
            methodVisitor.visitCode();
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/net/Socket", "getInetAddress", "()Ljava/net/InetAddress;", false);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "proxyInetAddress", "Ljava/net/InetAddress;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/InetAddress", "equals", "(Ljava/lang/Object;)Z", false);
            Label label0 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "defaultPort", "I");
            methodVisitor.visitInsn(IRETURN);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/net/Socket", "getPort", "()I", false);
            methodVisitor.visitInsn(IRETURN);
            methodVisitor.visitMaxs(2, 1);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getInetAddress", "()Ljava/net/InetAddress;", null, null);
            methodVisitor.visitCode();
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/net/Socket", "getInetAddress", "()Ljava/net/InetAddress;", false);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "proxyInetAddress", "Ljava/net/InetAddress;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/InetAddress", "equals", "(Ljava/lang/Object;)Z", false);
            Label label0 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "defaultAddress", "Ljava/net/InetAddress;");
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/net/Socket", "getInetAddress", "()Ljava/net/InetAddress;", false);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitMaxs(2, 1);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getRemoteSocketAddress", "()Ljava/net/SocketAddress;", null, null);
            methodVisitor.visitCode();
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/net/Socket", "getInetAddress", "()Ljava/net/InetAddress;", false);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "proxyInetAddress", "Ljava/net/InetAddress;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/InetAddress", "equals", "(Ljava/lang/Object;)Z", false);
            Label label0 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "proxyAddress", "Ljava/net/InetSocketAddress;");
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/net/Socket", "getRemoteSocketAddress", "()Ljava/net/SocketAddress;", false);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitMaxs(2, 1);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getChannel", "()Ljava/nio/channels/SocketChannel;", null, null);
            methodVisitor.visitCode();
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/net/Socket", "getInetAddress", "()Ljava/net/InetAddress;", false);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/p3achb0t/injection/Replace/ProxySocket", "proxyInetAddress", "Ljava/net/InetAddress;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/InetAddress", "equals", "(Ljava/lang/Object;)Z", false);
            Label label0 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label0);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/net/Socket", "getChannel", "()Ljava/nio/channels/SocketChannel;", false);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitMaxs(2, 1);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "close", "()V", null, new String[]{"java/io/IOException"});
            methodVisitor.visitCode();
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/net/Socket", "close", "()V", false);
            methodVisitor.visitInsn(RETURN);
            methodVisitor.visitMaxs(1, 1);
            methodVisitor.visitEnd();
        }
        classWriter.visitEnd();

        return classWriter.toByteArray();
    }
}
